<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.labour.dao.UserDao">

	<insert id="addOneUser" parameterType="java.lang.String">
		INSERT INTO `user` (user_name, password, name, user_type_id, create_user_id, create_user_name, status)
		VALUES (#{user_name}, #{password}, #{name}, #{user_type_id}, #{create_user_id}, #{create_user_name}, #{status})
	</insert>

	<insert id="addUserCompany" parameterType="java.lang.String">
		INSERT INTO `user_company` (user_id, user_name, company_id, company_full_name)
		VALUES (#{user_id}, #{user_name},#{company_id}, #{company_full_name})
	</insert>

	<insert id="addOneUserCompany" parameterType="com.labour.entity.UserCompany">
	<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
		SELECT last_insert_id()
	</selectKey>
	INSERT INTO `user_company` (user_id, user_name, company_id, company_full_name)
	VALUES (#{user_id}, #{user_name},#{company_id}, #{company_full_name})
</insert>

	<select id="selectOneUser" resultType="com.labour.entity.User" parameterType="java.lang.String">
		select user_id,user_name,password,name,petName,weChatId,headImage,genderId,genderName,nationId,nation,educationId,education,province_code,province_name,city_code,
			   city_name,county_code,county_name,address,idCard,idCardFront,idCardReverse,phoneNum,user_type_id,create_user_id,create_user_name,create_time,update_time,status
		FROM user
		where user_name=#{user_name};
	</select>

	<select id="selectOneUserById" resultType="com.labour.entity.User" parameterType="java.lang.String">
		select user_id,user_name,password,name,petName,weChatId,headImage,genderId,genderName,nationId,nation,educationId,education,province_code,province_name,city_code,
			   city_name,county_code,county_name,address,idCard,idCardFront,idCardReverse,phoneNum,user_type_id,create_user_id,create_user_name,create_time,update_time,status
		FROM user
		where user_id=#{user_id};
	</select>

	<select id="selectAllUserType" resultType="com.labour.model.UserType" parameterType="java.lang.String">
		select user_type_id, user_type_name, status FROM user_type;
	</select>

	<select id="selectUserTypeByFactor" resultType="com.labour.model.UserType" parameterType="java.lang.String">
		select user_type_id, user_type_name, status FROM user_type
		<where>
			<if test=" user_type_id !=null and user_type_id !='' ">
				and user_type_id = #{user_type_id}
			</if>
			<if test=" status !=null and status !='' ">
				and status = #{status}
			</if>
		</where>
	</select>

	<select id="selectAllUser" resultType="com.labour.entity.User" parameterType="java.lang.String">
		select * FROM user;
	</select>

	<update id="updatePassword" parameterType="java.lang.String">
		UPDATE `user` SET `password` = #{password} WHERE user_name = #{user_name}
	</update>

	<update id="updateStatus" parameterType="java.lang.String">
		UPDATE `user` SET `status` = #{status} WHERE user_name = #{user_name}
	</update>

	<select id="selectUserByFactor" resultType="com.labour.entity.User" parameterType="java.lang.String">
		SELECT u.user_id,u.user_name,u.name,u.user_type_id,ut.user_type_name,ut.user_type_name,u.create_user_id,u.create_user_name,u.create_time,u.status,u.update_time,c.user_company_id,c.company_id,c.company_full_name FROM user u
		LEFT JOIN user_company c ON c.user_id = u.user_id
		LEFT JOIN user_type ut ON ut.user_type_id = u.user_type_id
		<where>
			<if test=" company_id !=null and company_id !='' ">
				and c.company_id = #{company_id}
			</if>
			<if test=" name !=null and name !='' ">
				and u.name = #{name}
			</if>
			<if test=" user_name !=null and user_name !='' ">
				and u.user_name = #{user_name}
			</if>
			<if test=" user_type_id !=null and user_type_id !='' ">
				and u.user_type_id = #{user_type_id}
			</if>
		</where>
		LIMIT #{star_num},#{pageSize}
	</select>

	<select id="selectCountByFactor" resultType="java.lang.Integer" parameterType="java.lang.String">
		SELECT count(*) FROM user u
		LEFT JOIN user_company c ON c.user_id = u.user_id
		LEFT JOIN user_type ut ON ut.user_type_id = u.user_type_id
		<where>
			<if test=" company_id !=null and company_id !='' ">
				and c.company_id = #{company_id}
			</if>
			<if test=" name !=null and name !='' ">
				and u.name = #{name}
			</if>
			<if test=" user_name !=null and user_name !='' ">
				and u.user_name = #{user_name}
			</if>
			<if test=" user_type_id !=null and user_type_id !='' ">
				and u.user_type_id = #{user_type_id}
			</if>
		</where>
	</select>

	<select id="selectUsersCount" resultType="com.labour.model.UserType" parameterType="java.lang.String">
		SELECT ut.user_type_id,count(ucc.user_type_id) AS total,ut.user_type_name,ut.status FROM user_type ut
		LEFT JOIN (SELECT u.user_type_id,uc.company_id FROM user u
		    LEFT JOIN user_company uc on u.user_id=uc.user_id
			WHERE company_id = #{company_id}) ucc
		ON ut.user_type_id = ucc.user_type_id
		WHERE ut.status = #{status} GROUP BY ut.user_type_id ORDER BY ut.user_type_id;
	</select>

	<insert id="addWeChatUser" parameterType="java.lang.String">
		INSERT INTO `user` (weChatUnionID, weChatOpenId, weChatSessionKey, headImage, petName, genderId, genderName, phoneNum, user_type_id, status)
		VALUES (#{weChatUnionID},#{weChatOpenId},#{weChatSessionKey}, #{headImage}, #{petName}, #{genderId}, #{genderName}, #{phoneNum}, #{user_type_id}, #{status})
	</insert>

	<select id="selectOneWechatUser" resultType="com.labour.entity.User" parameterType="java.lang.String">
		select user_id,user_name,password,name,weChatUnionID, weChatOpenId, weChatSessionKey,headImage,petName,genderId,genderName,phoneNum,user_type_id,create_user_id,create_user_name,create_time,update_time,status FROM user
		where weChatUnionID=#{weChatUnionID} AND weChatOpenId=#{weChatOpenId};
	</select>

	<update id="userRegister" parameterType="java.lang.String">
		update user
		<trim prefix="set" suffixOverrides=",">
			<if test=" name !=null and name !='' ">
				name = #{name},
			</if>
			<if test=" phoneNum !=null and phoneNum !='' ">
				phoneNum = #{phoneNum},
			</if>
			<if test=" idCard !=null and idCard !='' ">
				idCard = #{idCard},
			</if>
			<if test=" genderId !=null and genderId !='' ">
				genderId = #{genderId},
			</if>
			<if test=" genderName !=null and genderName !='' ">
				genderName = #{genderName},
			</if>
			<if test=" province_code !=null and province_code !='' ">
				province_code = #{province_code},
			</if>
			<if test=" province_name !=null and province_name !='' ">
				province_name = #{province_name},
			</if>
			<if test=" city_code !=null and city_code !='' ">
				city_code = #{city_code},
			</if>
			<if test=" city_name !=null and city_name !='' ">
				city_name = #{city_name},
			</if>
			<if test=" county_code !=null and county_code !='' ">
				county_code = #{county_code},
			</if>
			<if test=" county_name !=null and county_name !='' ">
				county_name = #{county_name},
			</if>
			<if test=" idCardFront !=null and idCardFront !='' ">
				idCardFront = #{idCardFront},
			</if>
			<if test=" idCardReverse !=null and idCardReverse !='' ">
				idCardReverse = #{idCardReverse},
			</if>
		</trim>
		WHERE user_id = #{user_id}
	</update>

</mapper>